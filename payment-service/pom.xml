<!-- pom.xml -->
<!-- This is the Maven Project Object Model (POM) file for the "payment-service" project. -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <!--
    The project element is the root of the POM.
    It defines the basic project information and its configuration.
    -->

    <!-- Parent Project Information -->
    <parent>
        <!-- Define the parent project's artifactId, groupId, and version. -->
        <groupId>com.jaytech</groupId>
        <!-- The groupId of the parent project is "com.jaytech." -->
        <artifactId>saga-choreography-pattern</artifactId>
        <!-- The artifactId of the parent project is "saga-choreography-pattern." -->
        <version>0.0.1-SNAPSHOT</version>
        <!-- The version of the parent project is "0.0.1-SNAPSHOT." -->
    </parent>
    <!--
    The parent element defines the parent project from which this project will inherit settings and dependencies.
    In this case, it inherits from the parent project with groupId "com.jaytech," artifactId "saga-choreography-pattern," and version "0.0.1-SNAPSHOT."
    -->

    <!-- Model Version -->
    <modelVersion>4.0.0</modelVersion>
    <!--
    The modelVersion element specifies the version of the POM model.
    This version should be set to 4.0.0 for the current Maven version.
    -->

    <!-- Project Artifact Information -->
    <artifactId>payment-service</artifactId>
    <!--
    The artifactId element specifies the unique identifier for this project's artifact (e.g., JAR, WAR, etc.).
    In this case, it is "payment-service."
    -->

    <!-- Project Dependencies -->
    <dependencies>
        <!--
        The dependencies section specifies the project's dependencies on external libraries or other projects.
        Each dependency element declares a Maven artifact with its groupId, artifactId, and version.
        -->

        <!-- Spring Boot Starter Data JPA -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
            <!--
            The spring-boot-starter-data-jpa dependency includes the necessary dependencies for using Spring Data JPA.
            It provides support for interacting with databases using JPA (Java Persistence API).
            -->
        </dependency>

        <!-- Spring Boot Starter WebFlux -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
            <!--
            The spring-boot-starter-webflux dependency includes the necessary dependencies for building reactive web applications with Spring WebFlux.
            It provides support for asynchronous and non-blocking request handling.
            -->
        </dependency>

        <!-- Spring Cloud Stream -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-stream</artifactId>
            <!--
            The spring-cloud-stream dependency provides support for building event-driven microservices using Spring Cloud Stream.
            It allows applications to communicate through message brokers like Kafka or RabbitMQ.
            -->
        </dependency>

        <!-- Spring Cloud Stream Binder Kafka -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-stream-binder-kafka</artifactId>
            <!--
            The spring-cloud-stream-binder-kafka dependency provides support for Kafka as the message broker for Spring Cloud Stream applications.
            -->
        </dependency>

        <!-- Spring Kafka -->
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka</artifactId>
            <!--
            The spring-kafka dependency provides support for integrating Spring applications with Apache Kafka.
            It allows applications to produce and consume messages from Kafka topics.
            -->
        </dependency>

        <!-- PostgreSQL JDBC Driver -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
            <!--
            The PostgreSQL JDBC driver allows the application to connect to PostgreSQL databases.
            It is marked with the "runtime" scope, meaning it is needed during runtime but not during compilation.
            -->
        </dependency>

        <!-- Project Lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
            <!--
            The lombok dependency provides annotations and utility classes to reduce boilerplate code in Java classes.
            It is marked as "optional" because it is not required for the functionality of the application.
            -->
        </dependency>

        <!-- Common DTOs -->
        <dependency>
            <groupId>com.jaytech</groupId>
            <artifactId>common-dtos</artifactId>
            <version>0.0.1-SNAPSHOT</version>
            <!--
            The common-dtos dependency allows this project to use common data transfer objects (DTOs) defined in the "common-dtos" module.
            It is marked with the version "0.0.1-SNAPSHOT" to specify the desired version of the common-dtos library.
            -->
        </dependency>
    </dependencies>
    <!--
    End of Dependencies Section.
    -->

</project>
        <!-- End of pom.xml -->
